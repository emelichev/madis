{% extends 'base.html.twig' %}

{% set bodyClass = 'registry_mesurement form edit' %}
{% set menuItem = 'registry_mesurement' %}

{% block title %}{{ 'registry.mesurement.title.edit'|trans }} - {{ parent() }}{% endblock %}

{% block body_head %}
    <h1>
        {{ 'registry.mesurement.title.edit'|trans }}
        <small>{{ form.vars.value }}</small>
    </h1>
{% endblock %}

{% block breadcrumb %}
    {% set breadcrumb = [
        { 'name': 'registry.mesurement.breadcrumb.list'|trans, 'link': path('registry_mesurement_list') },
        { 'name': 'registry.mesurement.breadcrumb.edit'|trans({'%name%': form.vars.value}) }
    ] %}
    {% include '_breadcrumb.html.twig' with {'breadcrumb': breadcrumb} %}
{% endblock %}

{% block body %}
    {{ include('Registry/Mesurement/_form.html.twig') }}
{% endblock %}

{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function(){
            traiterBoutons('mesurement_contractors', 'Sous-traitants');
            traiterBoutons('mesurement_treatments', 'Traitements');
            traiterBoutons('mesurement_requests', 'Demandes');
            traiterBoutons('mesurement_violations', 'Violations');
            traiterBoutons('mesurement_tools', 'Logiciels et supports');
        })

        function traiterBoutons(label, ariaLabel) {
            const buttonElement = $(`button[data-id='${label}']`);
            if (buttonElement.attr('data-id') === undefined) {
                setTimeout(function(){
                    traiterBoutons(label, ariaLabel);
                }, 1000);
                return; // Sortie de la fonction pour éviter d'exécuter le reste du code
            }
            buttonElement.removeAttr('role');
            buttonElement.attr('aria-label', ariaLabel);
        }
    </script>
{% endblock %}

