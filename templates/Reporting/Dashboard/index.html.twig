{% extends 'base.html.twig' %}

{% set bodyClass = 'reporting_dashboard' %}
{% set menuItem = 'reporting_dashboard' %}

{% block body_head %}
    <h1>
        {{ 'reporting.dashboard.title.index'|trans }}
        <small>{{ app.user.collectivity }}</small>
    </h1>
{% endblock %}

{% block breadcrumb %}
    {% set breadcrumb = [] %}
    {% include '_breadcrumb.html.twig' with {'breadcrumb': breadcrumb} %}
{% endblock %}

{% block body %}

    <div class="row">

        {# DETAIL : CONTRACTOR #}
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="box box-solid">
                <div class="box-header with-border"><h3 class="box-title">Sous-traitants</h3></div>
                <div class="box-body">
                    {% if 0 == data.contractor.all %}
                        Aucune donnée à afficher
                    {% else %}
                        <div class="col-sm-6 col-sm-offset-0 col-xs-4 col-xs-offset-1 text-center">
                            <canvas id="contractor-clauses" width="400" height="400"></canvas>
                            <p>{{ 'reporting.dashboard.contractor.contractual_clauses_verified.title'|trans }}</p>
                        </div>
                        <div class="col-sm-6 col-sm-offset-0 col-xs-4 col-xs-offset-1 text-center">
                            <canvas id="contractor-adopted-security-features" width="400" height="400"></canvas>
                            <p>{{ 'reporting.dashboard.contractor.adopted_security_features.title'|trans }}</p>
                        </div>
                        <div class="col-sm-6 col-sm-offset-0 col-xs-4 col-xs-offset-1 text-center">
                            <canvas id="contractor-maintains-treatment-register" width="400" height="400"></canvas>
                            <p>{{ 'reporting.dashboard.contractor.maintains_treatment_register.title'|trans }}</p>
                        </div>
                        <div class="col-sm-6 col-sm-offset-0 col-xs-4 col-xs-offset-1 text-center">
                            <canvas id="contractor-sending-data-outside-eu" width="400" height="400"></canvas>
                            <p>{{ 'reporting.dashboard.contractor.sending_data_outside_eu.title'|trans }}</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="box box-solid">
                <div class="box-header with-border"><h3 class="box-title">Demandes</h3></div>
                <div class="box-body">
                    {% if 0 == data.request.value.all %}
                    Aucune donnée à afficher
                    {% else %}
                        <div class="col-sm-6 col-sm-offset-0 col-xs-4 col-xs-offset-1 text-center">
                            <canvas id="request-type" width="400" height="400"></canvas>
                            <p>{{ 'reporting.dashboard.request.type.title'|trans }}</p>
                        </div>
                        <div class="col-sm-6 col-sm-offset-0 col-xs-4 col-xs-offset-1 text-center">
                            <canvas id="request-status" width="400" height="400"></canvas>
                            <p>{{ 'reporting.dashboard.request.status.title'|trans }}</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# TILES #}
        <div class="col-md-6 col-xs-12">

            {# REQUEST #}
            <div class="col-sm-6 col-xs-12">
                <div class="small-box bg-yellow">
                    <div class="inner">
                        <h3>{{ data.request.value.status.toProcess }}</h3>

                        <p>Demandes à traiter</p>
                    </div>
                    <div class="icon">
                        <i class="fa fa-users"></i>
                    </div>
                    <a href="{{ path('registry_request_list') }}" class="small-box-footer">
                        Plus d'informations <i class="fa fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>

            {# MESUREMENT : planified actions #}
            <div class="col-sm-6 col-xs-12">
                <div class="small-box bg-aqua">
                    <div class="inner">
                        <h3>{{ data.mesurement.value.planified }}</h3>
                        <p>Actions planifiées</p>
                    </div>
                    <div class="icon">
                        <i class="fa fa-crosshairs"></i>
                    </div>
                    <a href="{{ path('registry_mesurement_action_plan') }}" class="small-box-footer">
                        Plus d'informations <i class="fa fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>

            {# VIOLATION #}
            <div class="col-sm-6 col-xs-12">
                <div class="small-box bg-red">
                    <div class="inner">
                        <h3>{{ data.violation.value.all }}</h3>
                        <p>Violations</p>
                    </div>
                    <div class="icon">
                        <i class="fa fa-exclamation-circle"></i>
                    </div>
                    <a href="{{ path('registry_violation_list') }}" class="small-box-footer">
                        Plus d'informations <i class="fa fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>

            {# MESUREMENT : applied #}
            <div class="col-sm-6 col-xs-12">
                <div class="small-box bg-green">
                    <div class="inner">
                        <h3>{{ data.mesurement.value.applied }}</h3>
                        <p>Actions mises en place</p>
                    </div>
                    <div class="icon">
                        <i class="fa fa-adjust"></i>
                    </div>
                    <a href="{{ path('registry_mesurement_list') }}" class="small-box-footer">
                        Plus d'informations <i class="fa fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        {# DETAIL : MATURITY #}
        <div class="col-md-6 col-xs-12">
            <div class="box box-solid">
                <div class="box-header with-border"><h3 class="box-title">Indice de maturité</h3></div>
                <div class="box-body">
                    {% if data.maturity is empty %}
                        Aucun indice à afficher
                    {% else %}
                        <canvas id="maturity-radar"></canvas>
                    {% endif %}
                </div>
            </div>
        </div>

        {# DETAIL : TREATMENTS #}
        <div class="col-md-6 col-xs-12">
            <div class="box box-solid">
                <div class="box-header with-border"><h3 class="box-title">Mesures de sécurité</h3></div>
                <div class="box-body">
                    {% if 0 == data.treatment.value.numeric %}
                        Aucun traitement utilisable pour ce graphe
                    {% else %}
                        <canvas id="treatment-bar"></canvas>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>

    {% if app.user.collectivity.hasModuleConformiteTraitement == true %}
    <div class="row">
        {# DETAIL : CONFORMITE TRAITEMENT #}
        {% if app.user.collectivity.hasModuleConformiteTraitement == true %}
            <div class="col-md-6 col-xs-12">
                <div class="box box-solid">
                    <div class="box-header with-border"><h3 class="box-title">Conformité des traitements</h3></div>
                    <div class="box-body">
                        {% if data.conformiteTraitement.data is empty %}
                            Aucune donnée à afficher
                        {% else %}
                            <canvas id="conformiteTraitement-pie"></canvas>
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endif %}
    </div>
    {% endif %}
{% endblock %}

{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js"></script>

    {# DEFINE DATA #}
    <script>
        let labelYes = '{{ 'label.yes'|trans }}';
        let labelNo = '{{ 'label.no'|trans }}';

        let colorBlue = 'rgba(54, 162, 235, 1)';
        let colorBlueOpacity = 'rgba(54, 162, 235, 0.5)';
        let colorGreen = ' rgba(48, 183, 44, 1)';
        let colorGreenOpacity = ' rgba(48, 183, 44, 0.5)';
        let colorPurple = 'rgba(153, 51, 204, 1)';
        let colorPurpleOpacity = 'rgba(153, 51, 204, 0.5)';
        let colorRed = 'rgba(255, 99, 132, 1)';
        let colorRedOpacity = 'rgba(255, 99, 132, 0.5)';
        let colorTeal = 'rgba(0, 105, 92, 1)';
        let colorTealOpacity = 'rgba(0, 105, 92, 0.5)';
        let colorOrange = 'rgb(255, 136, 0, 1)';
        let colorOrangeOpacity = 'rgb(255, 136, 0, 0.5)';

        let labelYesNo = [labelYes, labelNo];

        // CONTRACTOR
        let contractorClausesData = [{{ data.contractor.clauses.yes }}, {{ data.contractor.clauses.no }}];
        let contractorAdoptedSecurityFeaturesData = [{{ data.contractor.adoptedSecurityFeatures.yes }}, {{ data.contractor.adoptedSecurityFeatures.no }}];
        let contractorMaintainsTreatmentRegisterData = [{{ data.contractor.maintainsTreatmentRegister.yes }}, {{ data.contractor.maintainsTreatmentRegister.no }}];
        let contractorSendingDataOutsideEuData = [{{ data.contractor.sendingDataOutsideEu.yes }}, {{ data.contractor.sendingDataOutsideEu.no }}];

        // MESUREMENT
        let mesurementStatusData = [{{ data.mesurement.value.applied }}, {{ data.mesurement.value.planified }}, {{ data.mesurement.value.notApplied }}];

        // MATURITY
        let maturityLabels = [];
        let maturitySerieLabel = [];
        let maturityData = [];

        {% if data.maturity.new is defined %}
            let tmpData1 = [];
            maturitySerieLabel.push('{{ data.maturity.new.name }}');
            {% for position, info in data.maturity.new.data %}
                maturityLabels.push('{{ info.name }}');
                tmpData1.push('{{ info.score }}');
            {% endfor %}
            maturityData.push(tmpData1);
        {% endif %}
        {% if data.maturity.old is defined %}
            let tmpData2 = [];
            maturitySerieLabel.push('{{ data.maturity.old.name }}');
            {% for position, info in data.maturity.old.data %}
                tmpData2.push('{{ info.score }}');
            {% endfor %}
            maturityData.push(tmpData2);
        {% endif %}

        // REQUEST
        let requestTypeLabel = [
            'Rectifier des données',
            'Supprimer des données',
            'Retirer le consentement',
            'Accéder à des données',
            'Portabilité des données',
            'Limiter le traitement',
            'Autre',
        ];
        let requestTypeData = [
            {{ data.request.value.type.correct }},
            {{ data.request.value.type.delete }},
            {{ data.request.value.type.withdrawConsent }},
            {{ data.request.value.type.access }},
            {{ data.request.value.type.dataPortability }},
            {{ data.request.value.type.limitTreatment }},
            {{ data.request.value.type.other }},
        ];

        let requestStatusLabel = [
            'Traité',
            'À traiter',
            'Incomplète',
        ];
        let requestStatusData = [
            {{ data.request.value.status.processed }},
            {{ data.request.value.status.toProcess }},
            {{ data.request.value.status.incomplete }},
        ];

        // TREATMENT
        let treatmentLabels = [
            'Contrôle d\'accès',
            'Traçabilité',
            'Sauvegarde',
            'Mises à jour',
        ];
        let treatmentDatasetYes = [];
        let treatmentDatasetNo = [];
        {% for key, item in data.treatment.value.data %}
            treatmentDatasetYes.push('{{ attribute(item, 'yes') }}');
            treatmentDatasetNo.push('{{ attribute(item, 'no') }}');
        {% endfor %}

        // CONFORMITE TRAITEMENT
        let conformiteTraitementLabels = {{ data.conformiteTraitement.labels|json_encode|raw }};
        let conformiteTraitementData = {{ data.conformiteTraitement.data|json_encode|raw }};
        let conformiteTraitementColors = {{ data.conformiteTraitement.colors|json_encode|raw }};
    </script>

    {# USE DATA & DEFINE GRAPH #}
    <script src="{{ asset('build/js/dashboard.js') }}"></script>
{% endblock %}
